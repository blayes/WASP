nranef=10; (1:(nranef * (nranef - 1) / 2)) / 200
nranef=15; (1:(nranef * (nranef - 1) / 2)) / 200
(nranef * (nranef - 1) / 2) / 200
nranef=10; (nranef * (nranef - 1) / 2) / 200
nranef=10; (nranef * (nranef - 1) / 2) / 200
library(mclust)
install.packages("mclust")
y
q()
n
    g <- 10
    theta.alpha <- cbind(seq(0.1, 1, length.out = g), seq(c(2, 0.1)/c(2, 2), 5, length.out = g))
theta.alpha <- cbind(seq(0.1, 1, length.out = g), seq(c(2, 0.1)/c(2, 2), 5, length.out = g))
    theta.alpha <- cbind(seq(0.1, 1, length.out = g), seq(1 / 5, 5, length.out = g))
    colnames(theta.alpha) <- c("phi", "alpha")

theta.alpha
 nfixef = 10; nranef=10
    fixef <- rep(c(-2, 2), length = nfixef)
    # generate coefficient covariance from inverse Wishart
    ranefCovSqrt <- matrix(0, nranef, nranef)
    diag(ranefCovSqrt) <- sqrt(1:nranef)
    # strong dependence
    # ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef *
                                        # (nranef - 1) / 2)) / nranef)
    # weak dependence
    ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef * (nranef - 1) / 2))) / 100
    ranefCov <- tcrossprod(ranefCovSqrt)

ranefCov
    fixef <- rep(c(-2, 2), length = nfixef)
    # generate coefficient covariance from inverse Wishart
    ranefCovSqrt <- matrix(0, nranef, nranef)
    diag(ranefCovSqrt) <- sqrt(1:nranef)
    # strong dependence
    # ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef *
                                        # (nranef - 1) / 2)) / nranef)
    # weak dependence
    ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef * (nranef - 1) / 2))) / 10
    ranefCov <- tcrossprod(ranefCovSqrt)


ranefCov
chol(ranefCov)
t(chol(ranefCov))
t(ranefCovSqrt)
t(ranefCovSqrt)
(ranefCovSqrt)
t(chol(ranefCov))
ranefCovSqrt
ranefCovSqrt - t(chol(ranefCov))
all.equal(ranefCovSqrt, t(chol(ranefCov)))
t(ranefCovSqrt)
    fixef <- rep(c(-2, 2), length = nfixef)
    # generate coefficient covariance from inverse Wishart
    ranefCovSqrt <- matrix(0, nranef, nranef)
    diag(ranefCovSqrt) <- sqrt(1:nranef)
    # strong dependence
    # ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef *
                                        # (nranef - 1) / 2)) / nranef)
    # weak dependence
    ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef * (nranef - 1) / 2))) / 10
    ranefCov <- tcrossprod(ranefCovSqrt)

ranefCov
    ranefCovSqrt <- matrix(0, nranef, nranef)
    diag(ranefCovSqrt) <- sqrt(1:nranef)
    # strong dependence
    # ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef *
                                        # (nranef - 1) / 2)) / nranef)
    # weak dependence
    ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef * (nranef - 1) / 2))) / 10
ranefCovSqrt
    ranefCov <- tcrossprod(ranefCovSqrt)
ranefCov
round(ranefCov, 2)
    ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef * (nranef - 1) / 2))) / 20
    ranefCov <- tcrossprod(ranefCovSqrt)
ranefCov
    fixef <- rep(c(-2, 2), length = nfixef)
    # generate coefficient covariance from inverse Wishart
    ranefCovSqrt <- matrix(0, nranef, nranef)
    diag(ranefCovSqrt) <- sqrt(1:nranef)
    # strong dependence
    # ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef *
                                        # (nranef - 1) / 2)) / nranef)
    # weak dependence
    ranefCovSqrt[lower.tri(ranefCovSqrt)] <- sqrt((1:(nranef * (nranef - 1) / 2))) / nranef
    ranefCov <- tcrossprod(ranefCovSqrt)


ranefCov
image(Matrix(ranefCov))
library(Matrix)
image(Matrix(ranefCov))
